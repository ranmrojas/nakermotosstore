// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Categoria {
  id          Int         @id @default(autoincrement())
  nombre      String      @unique
  descripcion String?
  activa      Boolean     @default(true)  // Controla si la categoría se muestra o no
  fechaCreacion DateTime  @default(now())
  fechaActualizacion DateTime @updatedAt
  
  // Auto-referencia para jerarquía padre-hijo
  categoriaPadreId Int?   // ID de la categoría padre (null si es categoría raíz)
  categoriaPadre   Categoria? @relation("JerarquiaCategoria", fields: [categoriaPadreId], references: [id], onDelete: SetNull)
  subcategorias    Categoria[] @relation("JerarquiaCategoria")
  
  // Índices para mejorar performance
  @@index([categoriaPadreId])
  @@index([nombre])
  @@index([activa])
}

model Cliente {
  id            Int      @id @default(autoincrement())
  telefono      String   @unique
  nombre        String
  direccion     String
  valordomicilio Int?    @default(0)  // Valor del domicilio para este cliente
  direccionesGuardadas Json?    // Array de direcciones guardadas con sus costos
  creadoEn      DateTime @default(now())
  pedidos       Pedido[]
}

model Pedido {
  id          Int      @id @default(autoincrement()) // Secuencia inicia en 1032
  estado      String
  productos   Json
  subtotal    Int
  domicilio   Int
  total       Int
  medioPago   String?  // Medio de pago utilizado
  realizadoEn DateTime @default(now())
  enviadoAt   DateTime? // Fecha cuando se cambió el estado a "Enviado"
  auditoria   Json?    // Array de eventos de trazabilidad: [{fecha: string, accion: string, usuario?: string, detalles?: string}]
  nota        String?  // Nota opcional para el pedido
  cliente     Cliente  @relation(fields: [clienteId], references: [id])
  clienteId   Int
}

enum RolUsuario {
  admin
  operador
}

model Usuario {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
  nombre   String
  rol      RolUsuario @default(admin)
}


